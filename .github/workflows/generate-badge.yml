# WARNING: THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT MANUALLY.
name: Generate Open Badge
'on':
  workflow_dispatch:
    inputs:
      badge_id:
        description: Select the badge
        required: true
        type: choice
        options:
        - vsre1
      recipient_email:
        description: Recipient's Email
        required: true
        type: string
      expires:
        description: Badge expiration - YYYY-MM-DDTHH:MM:SSZ format (optional)
        required: false
        type: string
        default: ''
      startDate:
        description: Eligibility earned date - YYYY-MM-DDTHH:MM:SSZ format, e.g. 2025-08-28T10:20:00Z
        required: false
        type: string
        default: ''
jobs:
  generate-badge:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Generate Badge
      run: |
        mkdir -p badges_output
        python_args="--output-dir badges_output"
        # Use jq to iterate over the inputs JSON object and build the command
        for key in $(echo '${{ toJSON(github.event.inputs) }}' | jq -r 'keys[]'); do
          value=$(echo '${{ toJSON(github.event.inputs) }}' | jq -r --arg k "$key" '.[$k]')
          # Add to args if the value is not null or an empty string
          if [[ "$value" != "null" && -n "$value" ]]; then
            python_args="$python_args --$key \"$value\""
          fi
        done
        # Execute the python script with the dynamically constructed arguments
        eval "python generate_badge.py $python_args"
      env: ${{ toJSON(secrets) }}
    - name: Upload Badge as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: open-badge-${{ github.event.inputs.badge_id }}-${{ github.run_id }}
        path: badges_output/
